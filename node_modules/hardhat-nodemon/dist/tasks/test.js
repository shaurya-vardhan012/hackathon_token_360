"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const task_names_1 = require("hardhat/builtin-tasks/task-names");
const config_1 = require("hardhat/config");
const config_2 = require("../config");
const utils_1 = require("../utils");
const listener_1 = require("../utils/listener");
// extension task: test
(0, config_1.task)(task_names_1.TASK_TEST)
    .addFlag(config_2.command.watch, "Watch changes in files used in test (from testDir of config)")
    .setAction(async (args, hre, runSuper) => {
    const testFiles = args.testFiles;
    const { testDir, compileDir } = hre.config.compileWatch;
    await runSuper();
    (0, utils_1.showStatus)();
    await Promise.all([
        // listener for testing dir
        (0, listener_1.startListener)(testDir, async ({ eventType, filename }) => {
            (0, utils_1.showChange)(filename, eventType);
            const shouldReRun = !testFiles.length || testFiles.includes(`${testDir}/${filename}`);
            if (shouldReRun) {
                await runSuper();
            }
            (0, utils_1.showStatus)(!shouldReRun);
        }),
        // listener for compilation/contracts dir
        (0, listener_1.startListener)(compileDir, async ({ eventType, filename }) => {
            (0, utils_1.showChange)(filename, eventType);
            await hre.run(task_names_1.TASK_COMPILE);
            await runSuper();
            (0, utils_1.showStatus)(false);
        }),
    ]);
});
