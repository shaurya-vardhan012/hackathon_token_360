"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateArgs = exports.isSpecifiedChange = void 0;
const chalk_1 = __importDefault(require("chalk"));
const isSpecifiedChange = (args, fileName) => {
    const only = args.only !== "" ? args.only.split(",").map((it) => it.trim()) : [];
    const except = args.except !== "" ? args.except.split(",").map((it) => it.trim()) : [];
    return ((!only.length ||
        only.some((it) => it.toLowerCase() === fileName.toLowerCase())) &&
        (!except.length ||
            except.every((it) => it.toLowerCase() !== fileName.toLowerCase())));
};
exports.isSpecifiedChange = isSpecifiedChange;
const validateArgs = (args) => {
    const only = args.only !== "" ? args.only.split(",").map((it) => it.trim()) : [];
    const except = args.except !== "" ? args.except.split(",").map((it) => it.trim()) : [];
    const validPresence = (args.only.length === 0 && args.except.length > 0) ||
        (args.only.length > 0 && args.except.length === 0) ||
        args.except.length + args.only.length === 0;
    const validValues = (!only.length || only.every((it) => it.toLowerCase().endsWith(".sol"))) &&
        (!except.length || except.every((it) => it.toLowerCase().endsWith(".sol")));
    if (!validPresence) {
        console.log(chalk_1.default.red.bold("Only one of: only, except can be used"));
    }
    if (!validValues) {
        console.log(chalk_1.default.red.bold("Only (.sol) files can be passed to: only, except "));
    }
    return validPresence && validValues;
};
exports.validateArgs = validateArgs;
